
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef CONTROL_H
#define CONTROL_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Control__ctx_type_0 {
   fix16_t w1;
} Control__ctx_type_0;

typedef Control__ctx_type_0 Control_filter_type;

void Control__ctx_type_0_init(Control__ctx_type_0 &_output_);

void Control_filter_init(Control__ctx_type_0 &_output_);

fix16_t Control_filter(Control__ctx_type_0 &_ctx, fix16_t x);

typedef struct Control__ctx_type_1 {
   fix16_t i;
   Control__ctx_type_0 _inst2;
} Control__ctx_type_1;

typedef Control__ctx_type_1 Control_pi_type;

void Control__ctx_type_1_init(Control__ctx_type_1 &_output_);

void Control_pi_init(Control__ctx_type_1 &_output_);

fix16_t Control_pi(Control__ctx_type_1 &_ctx, fix16_t target, fix16_t current, uint8_t use_filter);



#endif // CONTROL_H
